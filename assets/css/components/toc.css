/* Table of Contents Styles */

.gh-post-wrapper {
    position: relative; /* Needed for absolute positioning of ToC at bottom */
    /* This wrapper doesn't need grid styles itself */
    max-width: var(--container-width, 1200px); /* Match overall container width */
    margin: 0 auto;
    padding: 0 2rem; /* Match overall container padding */
}

.gh-toc {
    display: none; /* Hidden by default on mobile */
}

.gh-toc-title {
    font-size: 3.2rem; /* Large title size */
    font-weight: 700; /* Bolder title */
    margin-bottom: 1rem;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    color: var(--color-base); /* Use main text color */
}

.gh-toc-list {
    list-style: none;
    padding: 0;
    margin: 0;
    font-size: 1.6rem; /* Main content font size */
    line-height: 1.6;
    /* Max height calculation will apply when sticky/fixed */
}

.gh-toc-list li {
    margin-bottom: 0.5em;
}

.gh-toc-list a {
    color: var(--color-secondary-text); /* Use secondary text color */
    text-decoration: none;
    display: block;
    padding: 0.1em 0.3em; /* Adjust padding */
    border-radius: 4px;
    transition: background-color 0.2s ease-in-out, color 0.2s ease-in-out;
}

.gh-toc-list a:hover {
    background-color: color-mix(in srgb, var(--color-bg) 90%, var(--color-secondary-text) 10%);
}

.gh-toc-list a.active {
    background-color: transparent; /* Remove background highlight */
    color: var(--secondary-accent-color, #D0B8FB); /* Apply secondary accent color to text */
    font-weight: 600; /* Make active link slightly bolder */
}

/* Desktop Layout - Fixed/Absolute Positioning */
@media (min-width: 1024px) { /* Adjust breakpoint if needed */

    .gh-toc {
        display: block; /* Show on desktop */
        position: absolute; /* Start as absolute relative to wrapper */
        width: 280px; /* Fixed width */
        /* Calculate left position: center viewport - half container - gap - toc width */
        /* This calculation assumes the container is centered. Need --content-width */
        /* Let's use a simpler approach first: position relative to the left edge of the centered content */
        /* We need JS to calculate this reliably, or use negative margin relative to article */
        /* Alternative: Place it far left and let it be sticky */
        left: 2rem; /* Position from the left edge of the wrapper padding */
        top: 0; /* Initially align with top of wrapper (effectively below header) */
        padding-top: 1.5rem; /* Add padding to align text */
        /* Initially hidden */
        visibility: hidden;
        opacity: 0;
        transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;
        z-index: 10; /* Ensure it's above content if overlap occurs */
    }

    .gh-toc.toc-active { /* Added by JS when scrolling past header/image */
        visibility: visible;
        opacity: 1;
        position: fixed; /* Change to fixed when active */
        top: 80px; /* Desired sticky offset from viewport top */
        max-height: calc(100vh - 120px); /* Max height when fixed */
        overflow-y: auto;
        /* Keep the same calculated left position */
        left: calc(50% - (var(--container-width, 1200px) / 2) + 2rem); /* Recalculate left based on viewport */
    }

    .gh-toc.toc-bottom { /* Added by JS when reaching footer */
        visibility: visible; /* Keep visible */
        opacity: 1;
        position: absolute; /* Change back to absolute */
        top: auto; /* Remove fixed top */
        bottom: 0; /* Align to bottom of gh-post-wrapper */
        left: 2rem; /* Revert to original absolute left */
        max-height: none; /* Remove max-height */
        overflow-y: hidden; /* Hide overflow when at bottom */
    }

    /* Article remains centered by default .gh-canvas behavior */
    .gh-article {
        padding-top: 0; /* Header already has padding */
        /* Ensure article content doesn't overlap with fixed ToC */
        /* No specific change needed here if ToC is positioned outside */
    }
}

/* Adjust left position for wider viewports if needed */
@media (min-width: 1400px) {
     .gh-toc.toc-active {
         /* Recalculate left based on viewport */
         left: calc(50% - (var(--container-width, 1200px) / 2) + 2rem);
     }
}