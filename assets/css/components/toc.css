/* Table of Contents Styles */

/* Base styles (Mobile First) */
.gh-toc {
    display: none; /* Hidden by default on mobile */
    padding-top: 1.5rem;
    padding-bottom: 1.5rem;
    margin-bottom: 2rem;
}

.gh-toc-title {
    font-size: 3.2rem; /* Large title size */
    font-weight: 700; /* Bolder title */
    margin-bottom: 1rem;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    color: var(--color-base); /* Use main text color */
}

.gh-toc-list {
    list-style: none;
    padding: 0;
    margin: 0;
    font-size: 1.6rem; /* Main content font size */
    line-height: 1.6;
    /* Max height calculation will apply when sticky/fixed */
}

.gh-toc-list li {
    margin-bottom: 0.5em;
}

.gh-toc-list a {
    color: var(--color-secondary-text); /* Use secondary text color */
    text-decoration: none;
    display: block;
    padding: 0.1em 0.3em; /* Adjust padding */
    border-radius: 4px;
    transition: background-color 0.2s ease-in-out, color 0.2s ease-in-out;
}

.gh-toc-list a:hover {
    background-color: color-mix(in srgb, var(--color-bg) 90%, var(--color-secondary-text) 10%);
}

.gh-toc-list a.active {
    background-color: transparent; /* Remove background highlight */
    color: var(--secondary-accent-color, #D0B8FB); /* Apply secondary accent color to text */
    font-weight: 600; /* Make active link slightly bolder */
}

/* Desktop Layout - Using standard .gh-canvas grid */
@media (min-width: 1024px) { /* Adjust breakpoint if needed */

    /* Ensure the container uses the grid variables correctly */
    /* Styles for .gh-canvas are in content.css */
    /* .gh-canvas { ... } */

    .gh-toc {
        grid-column: wide-start / main-start; /* Place in left wide column */
        display: block; /* Show on desktop */
        width: 280px; /* Explicit width */
        padding-right: 4rem; /* Create gap manually */
        align-self: start; /* Align to top of grid area */
        /* Initially hidden and positioned statically within the grid flow */
        visibility: hidden;
        opacity: 0;
        position: static; /* Default position */
        transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;
    }

    .gh-toc.toc-active { /* Added by JS when scrolling past trigger */
        visibility: visible;
        opacity: 1;
        position: sticky; /* Becomes sticky */
        top: 80px; /* Desired sticky offset */
        max-height: calc(100vh - 120px); /* Max height when sticky */
        overflow-y: auto;
        z-index: 10; /* Ensure it stays above content */
    }

    .gh-toc.toc-bottom { /* Added by JS when reaching footer */
        visibility: visible; /* Keep visible */
        opacity: 1;
        position: absolute; /* Change back to absolute relative to parent .gh-canvas */
        bottom: 0; /* Align to bottom of parent */
        top: auto; /* Remove sticky top */
        max-height: none;
        overflow-y: hidden;
        /* We need to recalculate left based on the parent grid */
        /* This might be complex, let's try without explicit left first */
        /* It should stay within its grid column */
    }

    .gh-article {
        grid-column: main-start / main-end; /* Article stays in the main content area */
        padding-top: 0; /* Header already has padding */
    }

     /* Ensure inner .gh-canvas elements behave correctly */
    .gh-article > .gh-header,
    .gh-article > .gh-content,
    .gh-article > .gh-footer {
       /* Ensure they occupy the correct subgrid (main) within the article's column */
       grid-column: main-start / main-end;
    }
}